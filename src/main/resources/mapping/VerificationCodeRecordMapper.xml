<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.zyf.sso.mapper.VerificationCodeRecordMapper" >
  <resultMap id="BaseResultMap" type="indi.zyf.sso.model.VerificationCodeRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="code_content" property="codeContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, type, code_content, create_time, ip, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from verification_code_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from verification_code_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="indi.zyf.sso.model.VerificationCodeRecord" >
    insert into verification_code_record (id, username, type,
      code_content, create_time, ip,
      state)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{codeContent,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{ip,jdbcType=INTEGER},
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="indi.zyf.sso.model.VerificationCodeRecord" >
    insert into verification_code_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="codeContent != null" >
        code_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="codeContent != null" >
        #{codeContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="indi.zyf.sso.model.VerificationCodeRecord" >
    update verification_code_record
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="codeContent != null" >
        code_content = #{codeContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indi.zyf.sso.model.VerificationCodeRecord" >
    update verification_code_record
    set username = #{username,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      code_content = #{codeContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>