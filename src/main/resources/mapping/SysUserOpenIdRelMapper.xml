<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.zyf.sso.mapper.SysUserOpenIdRelMapper">
	<resultMap id="BaseResultMap" type="indi.zyf.sso.model.SysUserOpenIdRel">
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="ext1" property="ext1" jdbcType="VARCHAR" />
		<result column="ext2" property="ext2" jdbcType="VARCHAR" />
		<result column="ext3" property="ext3" jdbcType="VARCHAR" />
		<result column="ext4" property="ext4" jdbcType="VARCHAR" />
		<result column="ext5" property="ext5" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="insert" parameterType="indi.zyf.sso.model.SysUserOpenIdRel">
		insert into sys_user_open_id_rel (username, open_id, state,
		create_date, update_date, ext1,
		ext2, ext3, ext4, ext5
		)
		values (#{username,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{ext1,jdbcType=VARCHAR},
		#{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR},
		#{ext4,jdbcType=VARCHAR}, #{ext5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="indi.zyf.sso.model.SysUserOpenIdRel">
		insert into sys_user_open_id_rel
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="ext1 != null">
				ext1,
			</if>
			<if test="ext2 != null">
				ext2,
			</if>
			<if test="ext3 != null">
				ext3,
			</if>
			<if test="ext4 != null">
				ext4,
			</if>
			<if test="ext5 != null">
				ext5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="ext1 != null">
				#{ext1,jdbcType=VARCHAR},
			</if>
			<if test="ext2 != null">
				#{ext2,jdbcType=VARCHAR},
			</if>
			<if test="ext3 != null">
				#{ext3,jdbcType=VARCHAR},
			</if>
			<if test="ext4 != null">
				#{ext4,jdbcType=VARCHAR},
			</if>
			<if test="ext5 != null">
				#{ext5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="selectByOpenId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		username,open_id,state,create_date,update_date,ext1,ext2,ext3,ext4,ext5
		from sys_user_open_id_rel
		where state = 1 and open_id = #{openId} limit 1
	</select>
	<select id="selectByUsername" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		username,open_id,state,create_date,update_date,ext1,ext2,ext3,ext4,ext5
		from sys_user_open_id_rel
		where state = 1 and username = #{username} limit 1
	</select>
	<delete id="deleteByOpenId" parameterType="java.lang.String">
		delete from sys_user_open_id_rel
		where open_id = #{openId} and state = 1
	</delete>
	<delete id="deleteByUsername" parameterType="java.lang.String">
		delete from sys_user_open_id_rel
		where username = #{username} and state = 1
	</delete>
</mapper>